version: '3.8'

services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_DB: cijene_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./service/db/psql.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d cijene_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - ./.env # Load environment variables from .env file
    environment:
      DB_DSN: postgresql://user:password@db:5432/cijene_db
      REDIRECT_URL: http://localhost:8000/docs # Example, adjust as needed
      # DEBUG: "true" # Removed for production
      PYTHONUTF8: "1"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # - ./service:/app/service # Removed for production (no hot-reloading)
      - ./.env:/app/.env # Load environment variables from .env file
      - crawler_data:/app/crawler_output # Mount shared volume for import
    command: ["sh", "-c", "python service/db/migrate.py && python -m uvicorn service.main:app --host 0.0.0.0 --port 8000"] # Removed --reload

  crawler:
    build: .
    environment:
      DB_DSN: postgresql://user:password@db:5432/cijene_db
      # DEBUG: "true" # Removed for production
      PYTHONUTF8: "1"
    depends_on:
      - db
    volumes:
      - crawler_data:/app/output # Crawler writes to this shared volume
    # This service is not meant to be continuously running.
    # It's here to provide a container for running crawler commands.
    # Example usage: docker-compose run --rm crawler python -m crawler.cli.crawl /app/output --date 2024-01-01
    command: ["tail", "-f", "/dev/null"] # Keep container alive for manual execution

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    # ports: # Removed for production (access via SSH tunnel if needed)
    #   - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json

volumes:
  db_data:
  pgadmin_data:
  crawler_data: # New volume for crawler output
